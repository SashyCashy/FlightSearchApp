{"ast":null,"code":"var _jsxFileName = \"/Users/sashankpindiproli/flightsearchapp/src/components/layout/LeftPane.js\";\n\n/**\n * File Description: This component is the left pane of the website to display the results of search\n * Author(s): Sashank Pindiproli\n * Date of Creation: 02/02/2020\n */\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport ToggleBtnComponent from '../common/ToggleButton';\nimport Dropdown from '../common/Dropdown';\nimport DatePicker from '../common/DatePicker';\nimport Button from '../common/Button';\nimport { Form } from 'react-bootstrap';\nimport TypeAhead from '../common/TypeAhead';\n\nconst LeftPane = () => {\n  const [airportData, setAirportData] = useState();\n  /** FETCH AIRPORT CODE DATA */\n\n  const getAirportData = async () => {\n    let result = await fetch('airport.json');\n    let data = await result.json();\n    setAirportData(data.map(city => city.city_name));\n  };\n\n  useEffect(() => {\n    if (airportData === undefined) {\n      getAirportData();\n    }\n  }, [setAirportData]);\n  const radios = [{\n    name: 'One Way',\n    value: '1'\n  }, {\n    name: 'Return',\n    value: '2'\n  }];\n  const dropdownData = [{\n    name: '1',\n    value: 1,\n    onClick: () => setOptionValue(dropdownData[0].value)\n  }, {\n    name: '2',\n    value: 2,\n    onClick: () => setOptionValue(dropdownData[1].value)\n  }, {\n    name: '3',\n    value: 3,\n    onClick: () => setOptionValue(dropdownData[2].value)\n  }];\n  const [radioValue, setRadioValue] = useState(radios[0].value);\n  const [optionValue, setOptionValue] = useState(0);\n  const [startDate, setStartDate] = useState();\n  const [returnDate, setReturnDate] = useState();\n  return /*#__PURE__*/React.createElement(StyledContainer, {\n    id: \"left-pane__container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(StyledToggleArea, {\n    id: \"flight-travel__options\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ToggleBtnComponent, {\n    radios: radios,\n    defaultVal: radioValue,\n    onClick: value => setRadioValue(value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(StyledFormArea, {\n    id: \"flight-travel__selections\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"formOriginCity\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TypeAhead, {\n    placeholder: \"Enter Origin City\",\n    data: airportData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"formDestinationCity\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TypeAhead, {\n    placeholder: \"Enter Destination City\",\n    data: airportData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"formStartDate\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(DatePicker, {\n    type: \"start\",\n    onChange: data => setStartDate(data),\n    selected: startDate,\n    placeholder: 'Start Date',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  })), radioValue === '2' ? /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"formReturnDate\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(DatePicker, {\n    type: \"return\",\n    onChange: data => setReturnDate(data),\n    selected: returnDate,\n    placeholder: 'Return Date',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 15\n    }\n  })) : null, /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"passengerList\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Dropdown, {\n    dropdownText: optionValue || 'Select Passengers',\n    data: dropdownData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    className: \"search__button\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }, \"Search\"))));\n};\n\nconst StyledContainer = styled.div`\n  border: 2px solid black;\n  width: calc(15%);\n  display: flex;\n  margin-top: 0.5vh;\n  flex-direction: column;\n`;\nconst StyledToggleArea = styled.div`\n  width: 100%;\n  height: 5em;\n  padding-top: 2.3em;\n  border-bottom: 2px solid black;\n  position: relative;\n`;\nconst StyledFormArea = styled.div`\n  width: 100%;\n\n  padding: 1em 0.5em;\n\n  border-bottom: 2px solid black;\n  position: relative;\n  .dropdown {\n    display: flex;\n    border: 1px solid black;\n    button {\n      width: 100%;\n    }\n  }\n`;\nexport default LeftPane;","map":{"version":3,"sources":["/Users/sashankpindiproli/flightsearchapp/src/components/layout/LeftPane.js"],"names":["React","useState","useEffect","styled","ToggleBtnComponent","Dropdown","DatePicker","Button","Form","TypeAhead","LeftPane","airportData","setAirportData","getAirportData","result","fetch","data","json","map","city","city_name","undefined","radios","name","value","dropdownData","onClick","setOptionValue","radioValue","setRadioValue","optionValue","startDate","setStartDate","returnDate","setReturnDate","StyledContainer","div","StyledToggleArea","StyledFormArea"],"mappings":"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","sourcesContent":["/**\n * File Description: This component is the left pane of the website to display the results of search\n * Author(s): Sashank Pindiproli\n * Date of Creation: 02/02/2020\n */\n\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport ToggleBtnComponent from '../common/ToggleButton';\nimport Dropdown from '../common/Dropdown';\nimport DatePicker from '../common/DatePicker';\nimport Button from '../common/Button';\nimport { Form } from 'react-bootstrap';\nimport TypeAhead from '../common/TypeAhead';\nconst LeftPane = () => {\n  const [airportData, setAirportData] = useState();\n  /** FETCH AIRPORT CODE DATA */\n  const getAirportData = async () => {\n    let result = await fetch('airport.json');\n    let data = await result.json();\n    setAirportData(data.map((city) => city.city_name));\n  };\n\n  useEffect(() => {\n    if (airportData === undefined) {\n      getAirportData();\n    }\n  }, [setAirportData]);\n\n  const radios = [\n    { name: 'One Way', value: '1' },\n    { name: 'Return', value: '2' },\n  ];\n\n  const dropdownData = [\n    {\n      name: '1',\n      value: 1,\n      onClick: () => setOptionValue(dropdownData[0].value),\n    },\n    {\n      name: '2',\n      value: 2,\n      onClick: () => setOptionValue(dropdownData[1].value),\n    },\n    {\n      name: '3',\n      value: 3,\n      onClick: () => setOptionValue(dropdownData[2].value),\n    },\n  ];\n  const [radioValue, setRadioValue] = useState(radios[0].value);\n  const [optionValue, setOptionValue] = useState(0);\n  const [startDate, setStartDate] = useState();\n  const [returnDate, setReturnDate] = useState();\n\n  return (\n    <StyledContainer id=\"left-pane__container\">\n      <StyledToggleArea id=\"flight-travel__options\">\n        <ToggleBtnComponent\n          radios={radios}\n          defaultVal={radioValue}\n          onClick={(value) => setRadioValue(value)}\n        />\n      </StyledToggleArea>\n      <StyledFormArea id=\"flight-travel__selections\">\n        <Form>\n          <Form.Group controlId=\"formOriginCity\">\n            <TypeAhead placeholder=\"Enter Origin City\" data={airportData} />\n          </Form.Group>\n          <Form.Group controlId=\"formDestinationCity\">\n            <TypeAhead\n              placeholder=\"Enter Destination City\"\n              data={airportData}\n            />\n          </Form.Group>\n          <Form.Group controlId=\"formStartDate\">\n            <DatePicker\n              type=\"start\"\n              onChange={(data) => setStartDate(data)}\n              selected={startDate}\n              placeholder={'Start Date'}\n            />\n          </Form.Group>\n          {radioValue === '2' ? (\n            <Form.Group controlId=\"formReturnDate\">\n              <DatePicker\n                type=\"return\"\n                onChange={(data) => setReturnDate(data)}\n                selected={returnDate}\n                placeholder={'Return Date'}\n              />\n            </Form.Group>\n          ) : null}\n          <Form.Group controlId=\"passengerList\">\n            <Dropdown\n              dropdownText={optionValue || 'Select Passengers'}\n              data={dropdownData}\n            />\n          </Form.Group>\n\n          <Button className=\"search__button\" type=\"submit\">\n            Search\n          </Button>\n        </Form>\n      </StyledFormArea>\n    </StyledContainer>\n  );\n};\n\nconst StyledContainer = styled.div`\n  border: 2px solid black;\n  width: calc(15%);\n  display: flex;\n  margin-top: 0.5vh;\n  flex-direction: column;\n`;\n\nconst StyledToggleArea = styled.div`\n  width: 100%;\n  height: 5em;\n  padding-top: 2.3em;\n  border-bottom: 2px solid black;\n  position: relative;\n`;\n\nconst StyledFormArea = styled.div`\n  width: 100%;\n\n  padding: 1em 0.5em;\n\n  border-bottom: 2px solid black;\n  position: relative;\n  .dropdown {\n    display: flex;\n    border: 1px solid black;\n    button {\n      width: 100%;\n    }\n  }\n`;\n\nexport default LeftPane;\n"]},"metadata":{},"sourceType":"module"}